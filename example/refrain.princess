declare variable:

성능? 개나 줘 버리라지. 구현부터 하자.
타입스크립트가 편리한 이유는 타입추론을 검증하는 단계를 거치니까.
그러니까, 이 스크립트에서도 나름의 타입을 정하고 검증하는 걸로.

입력받을 수 있는 변수의 타입들

name princess_name = 세니카;
path background_music = /music/background/001.ogg;
xvii princess_age = 17; // 4글자로 숫자를 표현하는 단어가 전혀 없네... 로마숫자 XVII정도면 상징적이지 않을까?

기본적으로 문법에 따옴표를 포함하지 않는 방향으로 진행하도록 한다.
변수는 전부 상수가 아님을 가정하고,

scene을 하나의 클래스로 취급하게 된다면 참 편해지겠지.
그렇게 된다면 음. 근데 이러면 굳이 컴파일을 통할 필요가 있나???
없지?

아 근데 스크립트 내용같은 걸 다뤄야 .... 아닌데 그냥 하드코딩박으면 되는거 아냐?
어차피 씬별로 나뉘거나 하면 그러네?
하드코딩이라고 해도 실제로는 json같은 파일로 다뤄질테니까
씬을 정의할 scenes같은 파일이 필요하겠네

옵저버가 필요한가? 씬 이동을 인식하려면?
아니지, 이동을 엔진이 담당하니까.
게임을 다루는데 실제로는 웹엔진과 비슷해지겠다.
그렇게 되면 cli는 의미없는거지.

1. 엔진은 특정 구조의 파일들을 요구한다.
2. 특정 파일을 읽어서 데이터의 계층을 파악한다.
3. 페이지를 읽어서, 해당되는 클래스를 가진 태그에 대화문을 삽입해준다. 또, 클릭이나 엔터 인식을 가능하게끔 한다. 

////// 이게 가능한가 근데? 그냥 이 라이브러리는
대화문을 정의하고 출력하게만 하면 되지 않을까?
거기에 필요한 스타일을 정의하는 부분만 구현하면 될 것 같은데
클릭이나 엔터 인식 이벤트는 사용자가 구현하고 라이브러리가 제공하는 메소드를 통해서 엔진에 인터랙션할 수만 있으면 되는 거 아닌가?

////// 이런 방식을 통해 페이지에서만 설정된 대화문을 출력하고, 다양한 방식의 라이브러리나 사용자의 방향성에 맞춰지게끔 구성한다.

4. 이러한 상세 설정을 가능케 하는 설정 오브젝트를 제공한다.

결국 실제로 엔진이 하게 되는 일은 대화문의 출력과, 이미지나 사운드를 처리하는 것 뿐이고.
실제로는 사용자가 나머지 모두를 구현해야되겠지.

그러면 그냥 PrincessScript가 아니라 PrincessNovelEngine같은 이름이 되어야 하는 거 아닐까???

